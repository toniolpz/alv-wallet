/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.2/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'

    // Apply gradle scan plugin
    id 'com.gradle.build-scan' version '2.0.2'

    // Apply spring boot plugin
    id 'org.springframework.boot' version '2.0.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'

    // Apply protobuf plugin
    id 'com.google.protobuf' version '0.8.8'
}

repositories {
    // Use jcenter for resolving dependencies.
    jcenter()

    // Maven repository
    mavenCentral()
}

def grpcVersion = '1.23.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.9.1'
def protocVersion = protobufVersion
dependencies {    
    compile 'io.github.lognet:grpc-spring-boot-starter:3.4.1'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa:2.1.4.RELEASE'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'mysql:mysql-connector-java:5.1.48'

    implementation 'org.springframework.boot:spring-boot-dependencies:2.0.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly "javax.annotation:javax.annotation-api:1.2"

    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation "junit:junit:4.12"

    components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    // Need to patch constraints because snakeyaml is an optional dependency
                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                }
            }
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

application {
    // Building Server
    //mainClassName = 'alv.wallet.WalletApplication'

    // Building Client
    mainClassName = 'alv.wallet.client.App'
}

bootJar {
    // Building Server
    //archiveName = 'wallet-server.jar'

    // Building Client
    archiveName = 'wallet-client.jar'
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}